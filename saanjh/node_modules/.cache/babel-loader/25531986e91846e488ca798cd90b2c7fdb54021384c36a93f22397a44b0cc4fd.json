{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrish\\\\OneDrive\\\\Desktop\\\\saanjh_sahaayak\\\\saanjh2\\\\saanjh\\\\src\\\\components\\\\Doctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport Chatbot from './Chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Doctor() {\n  _s();\n  const Navigate = useNavigate();\n  const handleChatbotClick = async () => {\n    navigate('/chatbot');\n  };\n  const [patientlist, setPatientlist] = useState(null);\n  useEffect(() => {\n    const function1 = async () => {\n      const response = await axios.get(\"http://localhost:3001/en/getpatients\");\n      setPatientlist(response.data);\n    };\n    function1();\n  }, []);\n  const handleUpload = () => {\n    Navigate('/Upload');\n  };\n  function formatDate(inputDate) {\n    const date = new Date(inputDate);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n  const handlePatientClick = id => {\n    Navigate(`/doctorprofile/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctorpage\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date Of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Blood Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: patientlist && patientlist.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handlePatientClick(data._id),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(data.DOB)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.bloodGroup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)]\n          }, data._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"hii\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Doctor, \"5iAfsQGOy+X0LRQ01evh/LI9kk0=\", false, function () {\n  return [useNavigate];\n});\n_c = Doctor;\nexport default Doctor;\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","useNavigate","Chatbot","jsxDEV","_jsxDEV","Doctor","_s","Navigate","handleChatbotClick","navigate","patientlist","setPatientlist","function1","response","get","data","handleUpload","formatDate","inputDate","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","handlePatientClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","_id","name","phone","DOB","gender","bloodGroup","_c","$RefreshReg$"],"sources":["C:/Users/hrish/OneDrive/Desktop/saanjh_sahaayak/saanjh2/saanjh/src/components/Doctors.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Chatbot from './Chatbot';\r\n\r\nfunction Doctor(){\r\n    const Navigate=useNavigate();\r\n    const handleChatbotClick = async () => {\r\n        navigate('/chatbot');\r\n      };\r\n    const[patientlist, setPatientlist]=useState(null)\r\n    useEffect(()=>{\r\n        const function1 = async() => {\r\n            const response=await axios.get(\"http://localhost:3001/en/getpatients\")\r\n            setPatientlist(response.data);\r\n        }\r\n        function1();\r\n    },[])\r\n    const handleUpload=()=>{\r\n        Navigate('/Upload');\r\n    }\r\n    function formatDate(inputDate){\r\n        const date=new Date(inputDate);\r\n        const day=String(date.getDate()).padStart(2,'0');\r\n        const month= String(date.getMonth()+1).padStart(2,'0');\r\n        const year=date.getFullYear();\r\n        return `${day}/${month}/${year}`\r\n    }\r\n    const handlePatientClick = (id) => {\r\n        Navigate(`/doctorprofile/${id}`);\r\n      };\r\n    \r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <div className='doctorpage'>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                  <th>Patient Id</th>\r\n                  <th>Name</th>\r\n                  <th>Phone Number</th>\r\n                  <th>Date Of Birth</th>\r\n                  <th>Gender</th>\r\n                  <th>Blood Group</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                            {patientlist && patientlist.map((data) => (\r\n                                <tr key={data._id} onClick={() => handlePatientClick(data._id)}  >\r\n                                    {/* <th>{data.s_no}</th> */}\r\n                                    <td>{data._id}</td>\r\n                                    <td>{data.name}</td>\r\n                                    {/* <td>{data.email}</td> */}\r\n                                    <td>{data.phone}</td>\r\n                                    <td>{formatDate(data.DOB)}</td>\r\n                                    <td>{data.gender}</td>\r\n                                    <td>{data.bloodGroup}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                \r\n            </table>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n                <button>hii</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Doctor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAACN,WAAW,CAAC,CAAC;EAC5B,MAAMO,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnCC,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EACH,MAAK,CAACC,WAAW,EAAEC,cAAc,CAAC,GAACd,QAAQ,CAAC,IAAI,CAAC;EACjDC,SAAS,CAAC,MAAI;IACV,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAW;MACzB,MAAMC,QAAQ,GAAC,MAAMd,KAAK,CAACe,GAAG,CAAC,sCAAsC,CAAC;MACtEH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAAC;IACjC,CAAC;IACDH,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EACL,MAAMI,YAAY,GAACA,CAAA,KAAI;IACnBT,QAAQ,CAAC,SAAS,CAAC;EACvB,CAAC;EACD,SAASU,UAAUA,CAACC,SAAS,EAAC;IAC1B,MAAMC,IAAI,GAAC,IAAIC,IAAI,CAACF,SAAS,CAAC;IAC9B,MAAMG,GAAG,GAACC,MAAM,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IAChD,MAAMC,KAAK,GAAEH,MAAM,CAACH,IAAI,CAACO,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;IACtD,MAAMG,IAAI,GAACR,IAAI,CAACS,WAAW,CAAC,CAAC;IAC7B,OAAO,GAAGP,GAAG,IAAII,KAAK,IAAIE,IAAI,EAAE;EACpC;EACA,MAAME,kBAAkB,GAAIC,EAAE,IAAK;IAC/BvB,QAAQ,CAAC,kBAAkBuB,EAAE,EAAE,CAAC;EAClC,CAAC;EAEH,oBACI1B,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACJ,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACT/B,OAAA;MAAKgC,SAAS,EAAC,YAAY;MAAAL,QAAA,eAC3B3B,OAAA;QAAA2B,QAAA,gBACI3B,OAAA;UAAA2B,QAAA,eACA3B,OAAA;YAAA2B,QAAA,gBACE3B,OAAA;cAAA2B,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB/B,OAAA;cAAA2B,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb/B,OAAA;cAAA2B,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB/B,OAAA;cAAA2B,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB/B,OAAA;cAAA2B,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACf/B,OAAA;cAAA2B,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACR/B,OAAA;UAAA2B,QAAA,EACarB,WAAW,IAAIA,WAAW,CAAC2B,GAAG,CAAEtB,IAAI,iBACjCX,OAAA;YAAmBkC,OAAO,EAAEA,CAAA,KAAMT,kBAAkB,CAACd,IAAI,CAACwB,GAAG,CAAE;YAAAR,QAAA,gBAE3D3B,OAAA;cAAA2B,QAAA,EAAKhB,IAAI,CAACwB;YAAG;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnB/B,OAAA;cAAA2B,QAAA,EAAKhB,IAAI,CAACyB;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAEpB/B,OAAA;cAAA2B,QAAA,EAAKhB,IAAI,CAAC0B;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrB/B,OAAA;cAAA2B,QAAA,EAAKd,UAAU,CAACF,IAAI,CAAC2B,GAAG;YAAC;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/B/B,OAAA;cAAA2B,QAAA,EAAKhB,IAAI,CAAC4B;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtB/B,OAAA;cAAA2B,QAAA,EAAKhB,IAAI,CAAC6B;YAAU;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GARrBpB,IAAI,CAACwB,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASb,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKH,CAAC,eACN/B,OAAA;MAAA2B,QAAA,eACI3B,OAAA;QAAA2B,QAAA,EAAQ;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAAC7B,EAAA,CAtEQD,MAAM;EAAA,QACIJ,WAAW;AAAA;AAAA4C,EAAA,GADrBxC,MAAM;AAuEf,eAAeA,MAAM;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}