{"ast":null,"code":"import React,{useState}from'react';import{useNavigate,useParams}from'react-router-dom';import axios from'axios';// import Navigationvar from \"./Navigationvar\";\n// import bot from '../assets/chat-bot-logo-design-concept-600nw-1938811039.webp';\nimport Header from'./Header';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Passwordreset(){const{token}=useParams();// Assuming the token is passed as a URL parameter\nconst[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[message,setMessage]=useState('');const navigate=useNavigate();//   const handleChatbotClick = async () => {\n//     navigate('/chatbot');\n//   };\nconst handleReset=async()=>{if(password!==confirmPassword){setMessage('Passwords do not match.');return;}try{await axios.post(\"http://localhost:3001/en/reset-password/\".concat(token),{password});setMessage('Password has been set successfully! You can now login.');navigate('/login');// Redirect to login page\n}catch(error){setMessage('An error occurred.');console.error('Error:',error);}};const formStyle={width:'300px',margin:'50px auto',padding:'20px',border:'1px solid #ccc',borderRadius:'5px',textAlign:'center'};const inputStyle={width:'100%',padding:'10px',margin:'10px 0',boxSizing:'border-box'};const buttonStyle={width:'100%',padding:'10px',margin:'10px 0',backgroundColor:'#990011FF',color:'white',border:'none',borderRadius:'5px',cursor:'pointer'};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'6%'},children:\"Reset Password\"}),/*#__PURE__*/_jsxs(\"div\",{style:formStyle,children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New Password\",value:password,onChange:e=>setPassword(e.target.value),style:inputStyle}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),style:inputStyle}),/*#__PURE__*/_jsx(\"button\",{style:buttonStyle,onClick:handleReset,children:\"Reset Password\"}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]})]})]});}export default Passwordreset;","map":{"version":3,"names":["React","useState","useNavigate","useParams","axios","Header","jsx","_jsx","jsxs","_jsxs","Passwordreset","token","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","handleReset","post","concat","error","console","formStyle","width","margin","padding","border","borderRadius","textAlign","inputStyle","boxSizing","buttonStyle","backgroundColor","color","cursor","children","style","marginTop","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/hrish/OneDrive/Desktop/saanjh_sahaayak/saanjh2/saanjh/src/components/Passwordreset.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n// import Navigationvar from \"./Navigationvar\";\r\n// import bot from '../assets/chat-bot-logo-design-concept-600nw-1938811039.webp';\r\nimport Header from './Header';\r\n\r\nfunction Passwordreset() {\r\n  const { token } = useParams(); // Assuming the token is passed as a URL parameter\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n//   const handleChatbotClick = async () => {\r\n//     navigate('/chatbot');\r\n//   };\r\n\r\n  const handleReset = async () => {\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(`http://localhost:3001/en/reset-password/${token}`, { password });\r\n      setMessage('Password has been set successfully! You can now login.');\r\n      navigate('/login'); // Redirect to login page\r\n    } catch (error) {\r\n      setMessage('An error occurred.');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const formStyle = {\r\n    width: '300px',\r\n    margin: '50px auto',\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    textAlign: 'center'\r\n  };\r\n\r\n  const inputStyle = {\r\n    width: '100%',\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  const buttonStyle = {\r\n    width: '100%',\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    backgroundColor: '#990011FF',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  return (\r\n    <div><Header/>\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h3 style={{marginTop:'6%'}}>Reset Password</h3>\r\n      <div style={formStyle}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n        <button style={buttonStyle} onClick={handleReset}>\r\n          Reset Password\r\n        </button>\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n      {/* <div style={{ position: 'fixed', bottom: '20px', right: '20px', cursor: 'pointer' }} onClick={handleChatbotClick}>\r\n        <img src={bot} alt=\"Chatbot Icon\" style={{ width: '50px', height: '50px' }} />\r\n      </div> */}\r\n   \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passwordreset;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}