{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrish\\\\OneDrive\\\\Desktop\\\\saanjh_sahaayak\\\\saanjh2\\\\saanjh\\\\src\\\\components\\\\Passwordreset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\n// import Navigationvar from \"./Navigationvar\";\n// import bot from '../assets/chat-bot-logo-design-concept-600nw-1938811039.webp';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Passwordreset() {\n  _s();\n  const {\n    token\n  } = useParams(); // Assuming the token is passed as a URL parameter\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  //   const handleChatbotClick = async () => {\n  //     navigate('/chatbot');\n  //   };\n\n  const handleReset = async () => {\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:3001/en/reset-password/${token}`, {\n        password\n      });\n      setMessage('Password has been set successfully! You can now login.');\n      navigate('/login'); // Redirect to login page\n    } catch (error) {\n      setMessage('An error occurred.');\n      console.error('Error:', error);\n    }\n  };\n  const formStyle = {\n    width: '300px',\n    margin: '50px auto',\n    padding: '20px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    textAlign: 'center'\n  };\n  const inputStyle = {\n    width: '100%',\n    padding: '10px',\n    margin: '10px 0',\n    boxSizing: 'border-box'\n  };\n  const buttonStyle = {\n    width: '100%',\n    padding: '10px',\n    margin: '10px 0',\n    backgroundColor: '#990011FF',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '6%'\n        },\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: formStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: handleReset,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          bottom: '20px',\n          right: '20px',\n          cursor: 'pointer'\n        },\n        onClick: handleChatbotClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bot,\n          alt: \"Chatbot Icon\",\n          style: {\n            width: '50px',\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Passwordreset, \"nzMAEdaxU4xWhXYsfWD3U/1bF8s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Passwordreset;\nexport default Passwordreset;\nvar _c;\n$RefreshReg$(_c, \"Passwordreset\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","axios","Header","jsxDEV","_jsxDEV","Passwordreset","_s","token","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","handleReset","post","error","console","formStyle","width","margin","padding","border","borderRadius","textAlign","inputStyle","boxSizing","buttonStyle","backgroundColor","color","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","type","placeholder","value","onChange","e","target","onClick","position","bottom","right","handleChatbotClick","src","bot","alt","height","_c","$RefreshReg$"],"sources":["C:/Users/hrish/OneDrive/Desktop/saanjh_sahaayak/saanjh2/saanjh/src/components/Passwordreset.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n// import Navigationvar from \"./Navigationvar\";\r\n// import bot from '../assets/chat-bot-logo-design-concept-600nw-1938811039.webp';\r\nimport Header from './Header';\r\n\r\nfunction Passwordreset() {\r\n  const { token } = useParams(); // Assuming the token is passed as a URL parameter\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n//   const handleChatbotClick = async () => {\r\n//     navigate('/chatbot');\r\n//   };\r\n\r\n  const handleReset = async () => {\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(`http://localhost:3001/en/reset-password/${token}`, { password });\r\n      setMessage('Password has been set successfully! You can now login.');\r\n      navigate('/login'); // Redirect to login page\r\n    } catch (error) {\r\n      setMessage('An error occurred.');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const formStyle = {\r\n    width: '300px',\r\n    margin: '50px auto',\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    textAlign: 'center'\r\n  };\r\n\r\n  const inputStyle = {\r\n    width: '100%',\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  const buttonStyle = {\r\n    width: '100%',\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    backgroundColor: '#990011FF',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  return (\r\n    <div><Header/>\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h3 style={{marginTop:'6%'}}>Reset Password</h3>\r\n      <div style={formStyle}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n        <button style={buttonStyle} onClick={handleReset}>\r\n          Reset Password\r\n        </button>\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n      <div style={{ position: 'fixed', bottom: '20px', right: '20px', cursor: 'pointer' }} onClick={handleChatbotClick}>\r\n        <img src={bot} alt=\"Chatbot Icon\" style={{ width: '50px', height: '50px' }} />\r\n      </div>\r\n   \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Passwordreset;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}